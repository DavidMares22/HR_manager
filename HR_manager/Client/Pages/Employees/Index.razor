@page "/employees/"
@inject HttpClient _client
@inject IJSRuntime js

<HeadingComponent Text="List of Employees" />

<br />

<AuthorizeView Roles="Administrator">

    <Authorized>
        <a href="/employee/create" class="btn btn-secondary">
            <span class="oi oi-plus"></span>
            Create New Employee
        </a>
    </Authorized>
    <NotAuthorized>
        <p>Only Administrators can create Employees</p>
    </NotAuthorized>


</AuthorizeView>


<br />
<br />

<br />
@if (Employees == null)
{
    <div class="alert alert-info">Loading Employees...</div>
}
else
{
    <table class="table ">
        <thead>
            <tr>
                <th>Name</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var employee in Employees)
            {
                <tr>
                    <td>@employee.Name</td>
                    <td>
                        <a href="" class="btn btn-primary">
                            <span class="oi oi-book"></span>
                        </a>
                        <a href="/employee/edit/@employee.Id" class="btn btn-warning">
                            <span class="oi oi-pencil"></span>
                        </a>
                        <button class="btn btn-danger" @onclick="@(()=>Delete(employee.Id))">
                            <span class="oi oi-delete"></span>
                        </button>


                    </td>
                </tr>

            }
        </tbody>
    </table>
}

@code {
    private List<Employee> Employees;

    protected async override Task OnInitializedAsync()
    {
        Employees = await _client.GetFromJsonAsync<List<Employee>>($"{Endpoints.EmployeesEndpoint}");
    }

    async Task Delete(int employeeId)
    {
        var employee = Employees.First(q => q.Id == employeeId);
        var confirm = await js.InvokeAsync<bool>("confirm", $"Do you want to delete {employee.Name}?");
        if (confirm)
        {
            await _client.DeleteAsync($"{Endpoints.EmployeesEndpoint}/{employeeId}");
            await OnInitializedAsync();
        }

    }


}
