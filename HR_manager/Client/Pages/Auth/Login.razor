@page "/login"

@inject IAccountsRepository accountsRepository
@inject NavigationManager navigationManager
@inject ILoginService loginService
@inject IDisplayMessage displayMessage

@using HR_manager.Client.Auth

<h3>Login</h3>


<EditForm Model="userLogin" OnValidSubmit="CreateUser">
    <DataAnnotationsValidator />
    

    <div class="form-group">
        <label>Email:</label>
        <div>
            <InputText class="form-control" @bind-Value="@userLogin.Email" />
            <ValidationMessage For="@(() => userLogin.Email)" />
        </div>
    </div>

    <div class="form-group">
        <label>Password:</label>
        <div>
            <InputPassword class="form-control" @bind-Value="@userLogin.Password" />
            <ValidationMessage For="@(() => userLogin.Password)" />
        </div>
    </div>

    <button type="submit" class="btn btn-primary">Login</button>

</EditForm>



@code {
    private UserLogin userLogin = new UserLogin();

    private async Task CreateUser()
    {
        List<string> userToken = await accountsRepository.Login(userLogin);
        

        if (userToken.ElementAt(0) == "Error: ")
        {
            await displayMessage.DisplayErrorMessage(string.Join(" ", userToken));
        }
        else
        {
            Console.WriteLine(userToken.ElementAt(1));
            await loginService.Login(userToken.ElementAt(1));
            navigationManager.NavigateTo("");
        }
    }

}
